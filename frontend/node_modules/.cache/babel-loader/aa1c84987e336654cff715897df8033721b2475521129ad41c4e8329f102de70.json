{"ast":null,"code":"// src/api/usuarioApi.ts\nimport axios from \"axios\";\n\n// Defina a URL base do seu backend (certifique-se de que o CORS esteja configurado no Spring Boot)\nconst API_BASE_URL = \"http://localhost:8080/usuario\";\n// Função para criar um usuário\nexport const criarUsuario = async usuario => {\n  const response = await axios.post(`${API_BASE_URL}/criar`, usuario);\n  return response.data;\n};\n\n// Função para buscar usuário por email\nexport const buscarUsuarioPorEmail = async email => {\n  // Aqui você pode criar um endpoint específico para busca por email\n  // ou usar query parameters (por exemplo: GET /usuario?email=xxx)\n  const response = await axios.get(`${API_BASE_URL}/buscar-email/${encodeURIComponent(email)}`);\n  return response.data;\n};\n\n// Outras funções podem ser adicionadas, como depositar, sacar, transferir, etc.","map":{"version":3,"names":["axios","API_BASE_URL","criarUsuario","usuario","response","post","data","buscarUsuarioPorEmail","email","get","encodeURIComponent"],"sources":["/home/jr/SpringBank/frontend/src/api/usuarioApi.ts"],"sourcesContent":["// src/api/usuarioApi.ts\nimport axios from \"axios\";\n\n// Defina a URL base do seu backend (certifique-se de que o CORS esteja configurado no Spring Boot)\nconst API_BASE_URL = \"http://localhost:8080/usuario\";\n\nexport interface Usuario {\n  id?: string;\n  nome: string;\n  email: string;\n  CPF: string;\n  senha: string;\n  saldo?: number;\n}\n\n// Função para criar um usuário\nexport const criarUsuario = async (usuario: Usuario): Promise<Usuario> => {\n  const response = await axios.post(`${API_BASE_URL}/criar`, usuario);\n  return response.data;\n};\n\n// Função para buscar usuário por email\nexport const buscarUsuarioPorEmail = async (\n  email: string\n): Promise<Usuario> => {\n  // Aqui você pode criar um endpoint específico para busca por email\n  // ou usar query parameters (por exemplo: GET /usuario?email=xxx)\n  const response = await axios.get(\n    `${API_BASE_URL}/buscar-email/${encodeURIComponent(email)}`\n  );\n  return response.data;\n};\n\n// Outras funções podem ser adicionadas, como depositar, sacar, transferir, etc.\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,YAAY,GAAG,+BAA+B;AAWpD;AACA,OAAO,MAAMC,YAAY,GAAG,MAAOC,OAAgB,IAAuB;EACxE,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAAC,GAAGJ,YAAY,QAAQ,EAAEE,OAAO,CAAC;EACnE,OAAOC,QAAQ,CAACE,IAAI;AACtB,CAAC;;AAED;AACA,OAAO,MAAMC,qBAAqB,GAAG,MACnCC,KAAa,IACQ;EACrB;EACA;EACA,MAAMJ,QAAQ,GAAG,MAAMJ,KAAK,CAACS,GAAG,CAC9B,GAAGR,YAAY,iBAAiBS,kBAAkB,CAACF,KAAK,CAAC,EAC3D,CAAC;EACD,OAAOJ,QAAQ,CAACE,IAAI;AACtB,CAAC;;AAED","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}